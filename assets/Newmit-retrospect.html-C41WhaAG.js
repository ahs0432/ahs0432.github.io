import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as e,a as i,d as s}from"./app-zWBho-jB.js";const l="/assets/image/Post/Personal/Project/Newmit-retrospect/1.png",t="/assets/image/Post/Personal/Project/Newmit-retrospect/2.png",h="/assets/image/Post/Personal/Project/Newmit-retrospect/3.png",p="/assets/image/Post/Personal/Project/Newmit-retrospect/4.png",k="/assets/image/Post/Personal/Project/Newmit-retrospect/5.png",r="/assets/image/Post/Personal/Project/Newmit-retrospect/6.png",d="/assets/image/Post/Personal/Project/Newmit-retrospect/7.png",o="/assets/image/Post/Personal/Project/Newmit-retrospect/8.png",g="/assets/image/Post/Personal/Project/Newmit-retrospect/9.png",c="/assets/image/Post/Personal/Project/Newmit-retrospect/10.png",A="/assets/image/Post/Personal/Project/Newmit-retrospect/11.png",B="/assets/image/Post/Personal/Project/Newmit-retrospect/12.png",y="/assets/image/Post/Personal/Project/Newmit-retrospect/13.png",u="/assets/image/Post/Personal/Project/Newmit-retrospect/14.png",m="/assets/image/Post/Personal/Project/Newmit-retrospect/15.png",F="/assets/image/Post/Personal/Project/Newmit-retrospect/16.png",v="/assets/image/Post/Personal/Project/Newmit-retrospect/17.png",b="/assets/image/Post/Personal/Project/Newmit-retrospect/18.png",C="/assets/image/Post/Personal/Project/Newmit-retrospect/19.png",f="/assets/image/Post/Personal/Project/Newmit-retrospect/20.png",D="/assets/image/Post/Personal/Project/Newmit-retrospect/21.png",_="/assets/image/Post/Personal/Project/Newmit-retrospect/22.png",q="/assets/image/Post/Personal/Project/Newmit-retrospect/23.png",w={},x=i('<div class="hint-container info"><p class="hint-container-title">정보</p><p>📢 현재 포스팅은 2024년 1학기에 진행한 <code>팀 프로젝트</code>에 대한 회고입니다.<br> 프로젝트의 전체 기한과 제가 수행한 인프라, 인공지능 파트를 소개합니다.</p></div><h2 id="🎨-프로젝트-개요" tabindex="-1"><a class="header-anchor" href="#🎨-프로젝트-개요"><span>🎨 프로젝트 개요</span></a></h2><p>보관 폐기, 먹지않은 음식물이 전체 버려지는 식자재 중 13%를 차지할 정도로<br> 높은 비율을 차지하고 있고 식자재 관리에 어려움을 겪는 사용자가 굉장히 많습니다.</p><p>식자재가 잘 소비되어 낭비되지 않도록 하는 것을 목표로 프로젝트를 기획했고,<br> 이를 위해 보관 위치나 소비 기한을 알려주거나 레시피를 제공하는 등의 기능으로<br> 사용자가 식자재를 보다 쉽게 관리하고 이를 넘어 사용할 수 있는 방안을 제공합니다.</p><h3 id="🧑‍💻-프로젝트-참여자" tabindex="-1"><a class="header-anchor" href="#🧑‍💻-프로젝트-참여자"><span>🧑‍💻 프로젝트 참여자</span></a></h3><ul><li><a href="https://github.com/ahs0432" target="_blank" rel="noopener noreferrer">강찬</a> (<code>Product Manager</code>) <blockquote><p><code>Image</code> 데이터 수집 및 가공<br><code>Object Detection</code> 모델 학습<br><code>LLM</code> 모델 <code>Prompt Engineering</code><br><code>Cloud Infra</code> 아키텍처링 및 구축<br> 팀원 및 프로젝트 일정 조율<br> 서류 작성 및 제출</p></blockquote></li><li><a href="https://github.com/yheun03" target="_blank" rel="noopener noreferrer">은영환</a> (<code>UI/UX Design &amp; Publishing</code>) <blockquote><p><code>UI/UX</code> 디자인 작성<br><code>Publishing</code> 및 <code>UI</code> 구현<br> 서류 작성 및 보완<br> 프로젝트에 대한 추가 아이디어 제안</p></blockquote></li><li><a href="https://github.com/iJaeDragon" target="_blank" rel="noopener noreferrer">이재용</a> (<code>Back-End</code>) <blockquote><p><code>Back-End</code> 및 <code>Web</code> 서비스 연동 개발<br><code>SpringBoot</code> 기반 서비스 개발<br><code>MySQL</code> 쿼리 설계 및 연동</p></blockquote></li></ul><h2 id="🖼️-아이디어-스케치" tabindex="-1"><a class="header-anchor" href="#🖼️-아이디어-스케치"><span>🖼️ 아이디어 스케치</span></a></h2><p>프로젝트 아이디어는 여러 가지가 존재하였고 최종 의견으로는 두 가지가 남았습니다.<br> 의견은 아래 두 가지로 상세하진 않지만 간단한 아이디어로는 아래와 같게 구성됩니다.</p><h3 id="🥘-식자재-관리-플랫폼" tabindex="-1"><a class="header-anchor" href="#🥘-식자재-관리-플랫폼"><span>🥘 식자재 관리 플랫폼</span></a></h3><ul><li>프로젝트 개요 <ul><li>식자재를 관리하는 플랫폼을 제공하여 식자재를 손쉽게 등록하고 이를 소비할 방법 제공</li></ul></li><li>주요 기능 <ul><li><code>객체인식</code>: 식자재 객체를 인식하고 구분하여 자동으로 내용을 저장</li><li>냉장고: 자신만의 식자재 보관 그룹을 만들고 식자재에 대한 데이터 보관</li><li>레시피: 자신의 레시피를 다른 사용자와 공유하고 식자재 별 레시피를 추천 <ul><li>인공지능을 이용한 레시피 추천: <code>LLM</code>을 이용한 창의적인 레시피를 추천</li></ul></li></ul></li></ul><h3 id="📜-뉴스-키워드-분석을-통한-실시간-순위" tabindex="-1"><a class="header-anchor" href="#📜-뉴스-키워드-분석을-통한-실시간-순위"><span>📜 뉴스 키워드 분석을 통한 실시간 순위</span></a></h3><ul><li>프로젝트 개요 <ul><li>뉴스의 주요 키워드를 분석하고 최근 화두가 되고 있는 키워드와 숨겨진 키워드를 발견</li></ul></li><li>주요 기능 <ul><li>실시간 뉴스 키워드를 <code>워드클라우드</code>와 비슷한 형태로 제공</li><li>주요 키워드를 이용한 실시간 화제 정보를 정리하여 페이지로 제공</li><li>심각도가 높지만 실시간으로 화제가 되지 않고 있는 정보를 숨겨진 키워드로 제공</li></ul></li></ul><h2 id="⌛-개발-기간" tabindex="-1"><a class="header-anchor" href="#⌛-개발-기간"><span>⌛ 개발 기간</span></a></h2><p>프로젝트 참여 인원이 모두 재직자이자 학생으로 적은 시간으로 참여하게 됐으며,<br> 실제 프로젝트 기한은 이보다 더 타이트하게 이뤄진 점 참고 부탁드리겠습니다.</p><ul><li>총 기간: 2024.03.10 ~ 2024.06.04 <ul><li>계획 수립: 2024.03 ~ 2024.03</li><li>UI/UX 개발/보완: 2024.04 ~ 2024.05</li><li>이미지 데이터 수집: 2024.03 ~ 2024.04</li><li>객체인식 모델 학습: 2024.04 ~ 2024.05</li><li>백엔드 서비스 개발: 2024.05 ~ 2024.06</li><li>프롬프트 엔지니어링: 2024.05 ~ 2024.06</li><li>최종 발표: 2024.06.08</li></ul></li></ul><h2 id="💻-개발-스택" tabindex="-1"><a class="header-anchor" href="#💻-개발-스택"><span>💻 개발 스택</span></a></h2><h3 id="👔-ui-ux" tabindex="-1"><a class="header-anchor" href="#👔-ui-ux"><span>👔 UI/UX</span></a></h3><h4 id="✂️-도구" tabindex="-1"><a class="header-anchor" href="#✂️-도구"><span>✂️ 도구</span></a></h4><p><img src="https://img.shields.io/badge/figma-F24E1E?style=for-the-badge&amp;logo=figma&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/photoshop-31A8FF?style=for-the-badge&amp;logo=adobephotoshop&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/illustrator-FF9A00?style=for-the-badge&amp;logo=adobeillustrator&amp;logoColor=white" alt="" loading="lazy"></p><h4 id="🔧-언어" tabindex="-1"><a class="header-anchor" href="#🔧-언어"><span>🔧 언어</span></a></h4><p><img src="https://img.shields.io/badge/html5-E34F26?style=for-the-badge&amp;logo=html5&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/css3-1572B6?style=for-the-badge&amp;logo=css3&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/sass-CC6699?style=for-the-badge&amp;logo=sass&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/javascript-F7DF1E?style=for-the-badge&amp;logo=javascript&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/jquery-0769AD?style=for-the-badge&amp;logo=jquery&amp;logoColor=white" alt="" loading="lazy"></p><h4 id="🦴-프레임워크" tabindex="-1"><a class="header-anchor" href="#🦴-프레임워크"><span>🦴 프레임워크</span></a></h4><p><img src="https://img.shields.io/badge/bootstrap-7952B3?style=for-the-badge&amp;logo=bootstrap&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/materialdesign-757575?style=for-the-badge&amp;logo=materialdesign&amp;logoColor=white" alt="" loading="lazy"><img src="https://img.shields.io/badge/fontawesome-538DD7?style=for-the-badge&amp;logo=fontawesome&amp;logoColor=white" alt="" loading="lazy"></p><h3 id="🔬-백엔드" tabindex="-1"><a class="header-anchor" href="#🔬-백엔드"><span>🔬 백엔드</span></a></h3><h4 id="✂️-도구-1" tabindex="-1"><a class="header-anchor" href="#✂️-도구-1"><span>✂️ 도구</span></a></h4>',25),E=s("img",{src:"https://img.shields.io/badge/intellijidea-000000?style=for-the-badge&logo=intellijidea&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),P=s("h4",{id:"🔧-언어-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🔧-언어-1"},[s("span",null,"🔧 언어")])],-1),j=s("img",{src:"https://img.shields.io/badge/openjdk17-000000?style=for-the-badge&logo=openjdk&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),z=s("h4",{id:"🦴-프레임워크-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🦴-프레임워크-1"},[s("span",null,"🦴 프레임워크")])],-1),N=s("img",{src:"https://img.shields.io/badge/springboot3-6DB33F?style=for-the-badge&logo=springboot&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),S=s("h3",{id:"💺-인프라",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#💺-인프라"},[s("span",null,"💺 인프라")])],-1),L=s("h4",{id:"🚌-플랫폼",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🚌-플랫폼"},[s("span",null,"🚌 플랫폼")])],-1),T=s("img",{src:"https://img.shields.io/badge/navercloud-03C75A?style=for-the-badge&logo=naver&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),M=s("h4",{id:"🦾-os",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🦾-os"},[s("span",null,"🦾 OS")])],-1),U=s("img",{src:"https://img.shields.io/badge/rockylinux-10B981?style=for-the-badge&logo=rockylinux&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),I=s("h4",{id:"🚢-컨테이너",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🚢-컨테이너"},[s("span",null,"🚢 컨테이너")])],-1),O=s("img",{src:"https://img.shields.io/badge/docker-2496ED?style=for-the-badge&logo=docker&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),R=s("h4",{id:"🫙-database",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🫙-database"},[s("span",null,"🫙 Database")])],-1),H=s("img",{src:"https://img.shields.io/badge/mysql-4479A1?style=for-the-badge&logo=mysql&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),V=s("h3",{id:"🤖-인공지능",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🤖-인공지능"},[s("span",null,"🤖 인공지능")])],-1),X=s("h4",{id:"🔧-언어-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🔧-언어-2"},[s("span",null,"🔧 언어")])],-1),J=s("img",{src:"https://img.shields.io/badge/python-3776AB?style=for-the-badge&logo=python&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),Z=s("h4",{id:"🦴-프레임워크-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🦴-프레임워크-2"},[s("span",null,"🦴 프레임워크")])],-1),G=s("img",{src:"https://img.shields.io/badge/tensorflow-FF6F00?style=for-the-badge&logo=tensorflow&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),K=s("h4",{id:"✍️-llm",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#✍️-llm"},[s("span",null,"✍️ LLM")])],-1),W=s("img",{src:"https://img.shields.io/badge/Hyperclovax-03C75A?style=for-the-badge&logo=naver&logoColor=white",alt:"",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}},null,-1),$=i(`<h2 id="🤔-구분-별-회고" tabindex="-1"><a class="header-anchor" href="#🤔-구분-별-회고"><span>🤔 구분 별 회고</span></a></h2><h3 id="😺-객체인식" tabindex="-1"><a class="header-anchor" href="#😺-객체인식"><span>😺 객체인식</span></a></h3><p><code>객체인식</code>은 주요 기능이고, 처음 다뤄보는 분야이기에 러닝 커브가 존재했습니다.</p><p>최근에는 <code>YOLO</code>를 이용한 학습 모델을 구현하는 것이 높은 인식률을 보여줍니다.<br> 해당 프로젝트에서는 <code>TensorFlow</code>를 이용해 개념부터 이해하려고 노력했습니다.</p><p><code>YOLO</code>의 경우 <code>PyTorch</code>를 기반으로 하기에 여기서는 모델 별 인식률을 확인하고<br> 결과에 의거하여 최적의 모델을 확인한 뒤 <code>모델 학습</code> 및 <code>Serving</code> 하였습니다.</p><h4 id="🔭-모델-선정" tabindex="-1"><a class="header-anchor" href="#🔭-모델-선정"><span>🔭 모델 선정</span></a></h4><p>사전 학습 모델 선택을 위해 <code>TensorFlow</code>에서 제공 중인 <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2_detection_zoo.md" target="_blank" rel="noopener noreferrer">Model zoo</a>를 참고했습니다.</p><p>또한 가용할 수 있는 자원이 많지 않기에 모델은 CPU 가동이 가능한가도 평가했습니다.<br> 이에 평가 기준은 적당한 학습 소요 시간과 점수, 동작 시간, CPU 동작 여부입니다.</p><table><thead><tr><th style="text-align:center;">Index</th><th>Model name</th><th style="text-align:center;">Speed (ms)<br>(A100 GPU 기준)</th><th style="text-align:center;">COCO mAP</th><th style="text-align:center;">학습 소요 시간(Hour)<br>(RTX4090 기준)</th><th style="text-align:center;">CPU 동작 여부</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td>SSD MobileNet V1 FPN 640x640</td><td style="text-align:center;">48</td><td style="text-align:center;">29.1</td><td style="text-align:center;">3.3</td><td style="text-align:center;">동작</td></tr><tr><td style="text-align:center;">2</td><td>SSD MobileNet V2 FPNLite 320x320</td><td style="text-align:center;">22</td><td style="text-align:center;">22.2</td><td style="text-align:center;">1.4</td><td style="text-align:center;">동작</td></tr><tr><td style="text-align:center;">3</td><td>SSD MobileNet V2 FPNLite 640x640</td><td style="text-align:center;">39</td><td style="text-align:center;">28.2</td><td style="text-align:center;">2.5</td><td style="text-align:center;">동작</td></tr><tr><td style="text-align:center;">4</td><td>SSD ResNet50 V1 FPN 640x640 (RetinaNet50)</td><td style="text-align:center;">46</td><td style="text-align:center;">34.3</td><td style="text-align:center;">9.3</td><td style="text-align:center;">일부 지연</td></tr><tr><td style="text-align:center;">5</td><td>Faster R-CNN ResNet50 V1 640x640</td><td style="text-align:center;">53</td><td style="text-align:center;">29.3</td><td style="text-align:center;">7</td><td style="text-align:center;">자원 부족</td></tr></tbody></table><p>표 상으로 가장 높은 성능을 보이는 것은 4번 모델이었지만 학습 소요 시간이 가장 길고,<br> 모델의 리소스 사용량이 높아 CPU 환경에서 다소 지연되고 문제가 있는 모습을 보였습니다.</p><p>선정이 가능한 CPU에서 정상적으로 동작되는 경량화된 모델은 1, 2, 3번 모델이었고,<br> 성능 기준으로 1번 모델, 학습 시간 기준으로는 2번 모델을 선택하는게 좋아보였습니다.</p><p>다만, 여러번 학습을 수행하여야 하기에 이에 중간 정도인 3번 모델을 대상 선정하였습니다.</p><h4 id="📷-이미지-수집" tabindex="-1"><a class="header-anchor" href="#📷-이미지-수집"><span>📷 이미지 수집</span></a></h4><p>이미지 수집은 모델이 내가 원하는 대상을 찾을 수 있도록 학습 시키기 위한 요소로<br> 처음 데이터를 수집할 때는 Google 검색을 통해 데이터를 수집하여 보관하였습니다.</p><p>너무 고된 노역이라는 생각이 들어 Python을 이용한 자동화 스크립트를 작성하게 됐고,<br> 아래와 같은 간단한 크롤링 스크립트를 통해 키워드 별 데이터를 수집할 수 있었습니다.</p><ul><li>크롤링 함수 작성 (<code>Selenium</code> 이용)</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selenium </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selenium.webdriver.common.keys </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Keys</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selenium.webdriver.chrome.service </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selenium.webdriver.common.by </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> By</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> urllib.request </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> crawlImages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> saveurl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    download_list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    service </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">executable_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;&lt;크롬 드라이버 경로&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ChromeOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.headless </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;window-size=1920x1080&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--no-sandbox&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--headless&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--single-process&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;--disable-dev-shm-usage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;incognito&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">service</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">service, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">options) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://www.google.co.kr/imghp?hl=ko&amp;tab=wi&amp;ogbl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save_screenshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">search</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">q1.png&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    elem </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;q&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    elem.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">send_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    elem.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">send_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Keys.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">RETURN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    SCROLL_PAUSE_TIME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    last_height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">execute_script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;return document.body.scrollHeight&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">execute_script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;window.scrollTo(0, document.body.scrollHeight);&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">SCROLL_PAUSE_TIME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        new_height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">execute_script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;return document.body.scrollHeight&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">save_screenshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">search</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">q2.png&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new_height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> last_height: </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CSS_SELECTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.LZ4I&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        last_height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new_height</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    images </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_elements</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CSS_SELECTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.Q4LuWd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    now_count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(images)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(images), i)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;검색어에 대한 결과가 부족합니다.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            break</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            images[i].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 이미지 클릭</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            imgUrl </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CSS_SELECTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.iPVvYb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_attribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(imgUrl)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.jpg&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> imgUrl:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> imgUrl </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> download_list:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    continue</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                download_list.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(imgUrl)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                urllib.request.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">urlretrieve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(imgUrl, saveurl </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(now_count) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)    </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 이미지 다운</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                now_count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> now_count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            break</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(saveurl </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;download_list.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;w+&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(download_list))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.path</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> path</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>이미지 수집 및 저장</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">searchs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    # [검색어, 개수, 저장 경로]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;채소&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> search </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> searchs:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;시작&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    crawlImages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], search[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 총 59가지의 종류의 라벨에 대한 2,082개의 이미지를 수집할 수 있었습니다.</p><h4 id="🏷️-이미지-라벨링" tabindex="-1"><a class="header-anchor" href="#🏷️-이미지-라벨링"><span>🏷️ 이미지 라벨링</span></a></h4><p>이미지 라벨링은 각 이미지 상 어떠한 부분을 무엇으로 구분할지 정답지를 주는 것으로,<br> 수집된 이미지에 어떠한 항목이 어떤 것인지에 대해 확인 후 작성하는 것을 수행해야합니다.</p><p>이 부분은 자동화가 어렵기에 <a href="https://github.com/HumanSignal/labelImg" target="_blank" rel="noopener noreferrer"><code>LabelImg</code></a>를 이용하여 아래와 같이 라벨링했습니다.</p><figure><img src="`+l+`" alt="" width="90%" height="90%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="🫠-모델-학습" tabindex="-1"><a class="header-anchor" href="#🫠-모델-학습"><span>🫠 모델 학습</span></a></h4><p>이미지 라벨링을 통해 이미지를 수집했고 이를 이용하여 모델의 학습 수행을 하게 됐습니다.</p><p>학습은 <code>Docker</code>에 존재하는 <code>TensorFlow</code>에 대한 이미지를 활용하여 수행하게 됐으며,<br><code>Windows</code> 시스템 상에 <code>WSL</code>을 구성한 뒤 <code>Ubuntu</code> 상 <code>Docker</code>를 설치하였습니다.</p><p>당시 제 <code>GPU</code>와 호환되는 버전인 <a href="https://hub.docker.com/layers/tensorflow/tensorflow/2.15.0.post1-gpu-jupyter/images/sha256-d22bc484cff2835a6b17f2491e942fc371a358efc2cd5b971bb0c162130af982?context=explore" target="_blank" rel="noopener noreferrer">2.15.0.post1-gpu-jupyter</a> 이미지를 이용하였습니다.<br> 해당 이미지는 <code>TensorFlow</code> 뿐 아닌 <code>NVIDIA Driver</code>, <code>Jupyter</code>가 설치/제공됩니다.</p><p>이미지를 Pulling 하는 방법은 명령어 기준으로는 아래와 같이 진행할 수 있습니다.</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ docker pull tensorflow</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tensorflow:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">post1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gpu</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">jupyter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>TensorFlow</code> 이미지의 컨테이너 상 특정 경로를 매핑하여 파일을 읽을 수 있도록 했습니다.<br> 또한 <code>GPU</code>를 할당 및 <code>Notebook</code>의 8888 포트와 <code>TensorBoard</code>의 6006 포트를 포워딩했습니다.</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ docker run </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gpus all </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name tf </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8888</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8888</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6006</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">v &lt;경로&gt;:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d tensorflow</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tensorflow:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">post1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gpu</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">jupyter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>모델 학습 간 사용할 이미지를 하나의 경로로 이동 및 <code>Pascal VOC</code> 기반의<br> 내용 중 문제가 될 수 있는 <code>path</code>와 <code>filename</code>을 전처리로 수정하였습니다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> shutil</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">fruits </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">now_index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> forder </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> folder_list:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    fruits.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(forder)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    file_list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">listdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> forder </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> file_list:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;jpg&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            file0 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            shutil.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> forder </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> file0 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, move_dir </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(now_index).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">zfill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.jpg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            new_text_content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> forder </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> file0 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.xml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;r&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf-8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                lines </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">readlines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i, l </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(lines):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;folder&gt;&lt;/folder&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&lt;filename&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(now_index).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">zfill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.jpg&lt;/filename&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&lt;path&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(now_index).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">zfill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.jpg&lt;/path&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;source&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> l.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new_string:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_text_content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new_string </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        new_text_content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(move_dir </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(now_index).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">zfill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.xml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;w&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(new_text_content)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            now_index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>한 경로로 모인 모든 데이터를 <code>학습 데이터</code>와 <code>테스트 데이터</code>로 분할했고<br> 데이터가 약 <code>8:2</code> 비율로 분할되도록 확률적인 코드를 작성하여 분할했습니다.</p><p>아래 코드대로 실행 시에 파일의 개수가 항상 일정하게 분배되지는 않습니다.<br> 추후에는 해당 코드 외 다른 코드 형태로 데이터를 분할하여 사용할까 합니다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TEST DATA</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_dir </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;../images/test/&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">train_file_list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">listdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(move_dir)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(train_file_list)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> train_file_list:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;jpg&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> random.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">randrange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            xml_file </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;.&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.xml&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            shutil.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">move</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(move_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, test_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            shutil.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">move</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(move_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xml_file, test_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xml_file)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">            print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>모델 학습의 경우 <code>TensorFlow 2</code> 기반으로 <a href="https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/training.html" target="_blank" rel="noopener noreferrer">이 게시물</a>을 참고하여 구현하였습니다.<br> 자세한 학습 내용은 추후 <code>TensorFlow 2</code> 기반 모델 학습 방법으로 찾아오겠습니다.</p><p>우선 여러 번의 학습을 반복했고 기본적으로 제공되는 사전 학습 모델의 기본 값인<br><code>50,000 Epoch</code>를 기준으로 점차 횟수를 줄이면서 학습 5회 정도 수행하였습니다.</p><p>학습 간 학습률과 손실에 대한 값을 <code>TensorBoard</code>에서 아래와 같이 확인 가능합니다.<br> (아래 값은 <code>20,000 Epoch</code> 실행 간 발생된 사항을 그래프로 기록한 사항입니다.)</p><figure><img src="`+t+'" alt="" width="90%" height="90%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>확인 시 학습 데이터 양이 작기 때문인지 과대적합으로 인해 높은 <code>Epoch</code>인 경우<br> 분류를 잘못하는 것으로 보였고 <code>10000~25000 Epoch</code>가 성능이 괜찮았습니다.<br> (위 테스트 데이터는 별도 그래프로 저장하지 못하여 아쉬울 따름입니다..)</p><figure><img src="'+h+`" alt="" width="70%" height="70%" tabindex="0" loading="lazy"><figcaption>테스트 데이터를 통한 확인</figcaption></figure><p>이에 따라 <code>25,000 Epoch</code>를 기준으로 모델을 제작하여 추출하였습니다.</p><p>추출은 학습된 <code>Checkpoint</code> 파일에 <code>Export 스크립트</code>를 실행하는 방법을 이용합니다.<br> 추출된 모델 파일은 아래와 같은 파일 구조를 갖게 되므로 내용 참고 부탁드리겠습니다.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Model/</span></span>
<span class="line"><span>├─ checkpoint/</span></span>
<span class="line"><span>├─ saved_model/</span></span>
<span class="line"><span>│  ├─ checkpoint</span></span>
<span class="line"><span>│  ├─ ckpt-0.data-00000-of-00001</span></span>
<span class="line"><span>│  └─ ckpt-0.index</span></span>
<span class="line"><span>├─ pipeline.config</span></span>
<span class="line"><span>│  ├─ assets/</span></span>
<span class="line"><span>│  ├─ variables/</span></span>
<span class="line"><span>│  │  ├─ variables.data-00000-of-00001</span></span>
<span class="line"><span>│  │  └─ variables.index</span></span>
<span class="line"><span>│  ├─ fingerprint.pb</span></span>
<span class="line"><span>│  └─ saved_model.pb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="⏏️-모델-추출-및-serving" tabindex="-1"><a class="header-anchor" href="#⏏️-모델-추출-및-serving"><span>⏏️ 모델 추출 및 Serving</span></a></h4><p>학습이 완료된 모델의 파일을 모두 추출하고 이를 외부에서 <code>API</code> 등의 형태로 호출이 필요했습니다.</p><p>이런 형태를 <code>Model Serving</code>이라 하고 <code>TensorFlow</code>는 대표적으로 2가지 방식이 있었습니다.</p><ol><li><code>Django</code>, <code>Flask</code> 등 웹 프레임워크를 이용한 Serving</li><li><code>TensorFlow Serving</code></li></ol><p>두 가지 방식을 속도 등의 면에서 비교하였으며 이러한 비교 자료를 기반으로 선정을 하게 됐습니다.</p><table><thead><tr><th style="text-align:center;">항목</th><th style="text-align:center;">Django</th><th style="text-align:center;">TensorFlow Serving</th></tr></thead><tbody><tr><td style="text-align:center;">gRPC</td><td style="text-align:center;">지원 불가</td><td style="text-align:center;">0.983s</td></tr><tr><td style="text-align:center;">HTTP</td><td style="text-align:center;">9.088s</td><td style="text-align:center;">1.624s</td></tr></tbody></table><p>우선 우리가 필요한 것은 <code>REST API</code> 형식의 <code>HTTP</code> 형태였고 이를 기준으로 비교 시<br> 5배 이상의 시간 차이를 보여 성능, 기능 면 모두 <code>TensorFlow Serving</code>이 좋았습니다.</p><p><code>TensorFlow Serving</code>를 선정하게 됐고 사용을 위해 <code>컨테이너</code> 기반으로 구축 했습니다.<br> 인프라 환경 상 <code>CPU</code> 환경으로 <code>Docker</code>를 설치하여 <code>컨테이너</code>를 구축하였습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tensorflow/serving:2.15.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>컨테이너</code> 상 특정 경로를 매핑하여 <code>모델</code>을 인식할 수 있도록 제공하였습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8501:8501</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&lt;모델경로&gt;:/models/&lt;모델명&gt;&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MODEL_NAME=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">모델</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">명&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tensorflow/serving:2.15.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tf_serving</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>이후 아래와 같이 <code>API</code>를 호출하여 모델에 데이터를 입력 후 출력 데이터를 수신했습니다.</p><table><thead><tr><th style="text-align:center;">호출 주소</th><th style="text-align:center;">Method</th><th style="text-align:center;">내용</th></tr></thead><tbody><tr><td style="text-align:center;">http://localhost:8501/v1/models/&lt;모델명&gt;:predict</td><td style="text-align:center;">POST</td><td style="text-align:center;"><code>{&quot;instances&quot;: [이미지 픽셀 데이터] }</code></td></tr></tbody></table><p>출력 데이터는 아래와 같은 형식으로 제공되며 이중 필요한 데이터를 추출하여 사용합니다.</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;predictions&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;detection_multiclass_scores&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [[]], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Detection에 대한 클래스 별 점수</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;detection_classes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 어떤 항목이 Detection 됐는지</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;detection_anchor_indices&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// NMS라는 Bounding Box를 줄이는 작업 진행 후 Box</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;detection_boxes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 항목의 Box 위치</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;detection_scores&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.92344</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Detection된 항목의 점수</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;raw_detection_boxes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [], </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// NMS 작업 진행 전 전체 Box</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;num_detections&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// Detection된 개수</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;raw_detection_scores&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [] </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// NMS 작업 진행 전 점수</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위 API를 사용하는 방법에 대해서 개발자에게 전달하여 시스템과 연계할 수 있었습니다.</p><h3 id="✍️-llm-1" tabindex="-1"><a class="header-anchor" href="#✍️-llm-1"><span>✍️ LLM</span></a></h3><p><code>LLM</code>은 기존의 계획에는 없었지만 내부적으로 논의 간 추가적인 기능이 고안되어 추가했습니다.<br> 고안한 기능은 <code>LLM</code> 모델에서 사용자의 보유 식자재를 확인하고 레시피를 추천하는 기능입니다.</p><p>저희 <code>인프라</code>는 기술 스택에서 표현해둔 사항과 같이 <code>네이버 클라우드</code>를 사용하여 구현합니다.<br><code>네이버 클라우드</code>도 자체 모델을 이용하여 <code>HyperClova X</code>라는 서비스를 제공하고 있습니다.</p><p>저희는 <code>HyperClova X</code> 중 <code>HCX-003</code> 모델을 이용하여 서비스를 구현하게 됐습니다.</p><h4 id="📖-기능-구현" tabindex="-1"><a class="header-anchor" href="#📖-기능-구현"><span>📖 기능 구현</span></a></h4><p>레시피는 등록된 데이터 외 <code>LLM</code>에서 자체적으로 데이터를 생성하여 제공하도록 진행하였고,<br><code>System Prompt</code>를 통해 데이터의 형식을 제안하여 고안된 내용을 전달하도록 하였습니다.</p><p>작성한 <code>System Prompt</code>는 아래와 같으며 이를 통해 <code>JSON</code> 형식으로 출력 메시지를 수신합니다.</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>## 소개</span></span>
<span class="line"><span>요리 레시피를 알려주는 AI입니다. </span></span>
<span class="line"><span>요구사항에 맞춰 적절한 레시피를 추천합니다.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 요구사항</span></span>
<span class="line"><span>ingredients에 명시된 재료가 최대한 포함되는 레시피를 추천해주세요.</span></span>
<span class="line"><span>except_recipe에 명시된 레시피는 제외하고 비슷하거나 유사한 레시피도 제외합니다.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 제공되는 형식</span></span>
<span class="line"><span>재료와 추천 제외 요리는 아래와 같이 JSON 형식으로 제공됩니다.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    &quot;ingredients&quot;: [&quot;양파&quot;, &quot;파&quot;, &quot;삼겹살&quot;],</span></span>
<span class="line"><span>    &quot;except_recipe&quot;: [&quot;양파 조림&quot;]</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 제공하는 형식</span></span>
<span class="line"><span>위와 같은 형식으로 제공받을 경우 아래와 같이 JSON 형태로 답안을 제공해줍니다.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    &quot;recipe_name&quot;: &quot;삼겹살 덮밥&quot;,</span></span>
<span class="line"><span>    &quot;recipe_ingredients&quot;: [&quot;양파&quot;, &quot;파&quot;, &quot;삼겹살&quot;, &quot;통깨&quot;, &quot;쌀&quot;, &quot;간장&quot;, &quot;설탕&quot;, &quot;맛술&quot;, &quot;굴소스&quot;, &quot;간장&quot;, &quot;물엿&quot;, &quot;다진마늘&quot;, &quot;물&quot;, &quot;생강가루&quot;, &quot;후춧가루&quot;],</span></span>
<span class="line"><span>    &quot;recipes&quot;: [</span></span>
<span class="line"><span>        &quot;양파는 얇게 채를 썬 후 찬물에 담갔다가 체에 밭쳐 물기를 빼고 쪽파는 송송 썰어주세요. 볼에 간장 소스 재료를 넣고 섞어주세요.&quot;,</span></span>
<span class="line"><span>        &quot;달군 팬에 삼겹살을 올려 앞뒤로 노릇하게 굽고 한입 크기로 썰어주세요.&quot;,</span></span>
<span class="line"><span>        &quot;팬에 삼겹살을 굽고 나온 기름을 닦아 낸 후 간장 소스를 넣고 중약불에서 윤기 나게 조려가며 익혀주세요.&quot;,</span></span>
<span class="line"><span>        &quot;그릇에 따뜻한 밥을 담은 후 채를 썬 양파를 올리고 삼겹살을 돌려 담아주세요. 삼겹살에 팬에 남은 소스를 얹은 후 실파와 통깨를 뿌려 맛있게 즐겨주세요. (기호에 따라 가운데 달걀노른자와 연겨자를 올려 드시면 더욱 맛있게 드실 수 있답니다.)&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>내용을 보면 알 수 있듯 <code>ingredients</code>를 통해 보유 중인 식자재를 제공하게 되고,<br> 원하지 않는 레시피가 존재할 경우 <code>execpt_recipe</code>를 통해 내용을 전달하게 합니다.</p><p>이렇게 전달된 데이터를 토대로 레시피의 정보와 재료, 그리고 과정을 출력해주는 구조입니다.<br> 데이터는 반정형 데이터 형식인 <code>JSON</code>으로 반환하도록 했고 아래와 같이 실제 반환됐습니다.</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 입력 데이터</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ingredients&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;스파게티면&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;미트볼&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;삼겹살&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;양파&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;except_recipe&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 출력 데이터</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;recipe_name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;미트볼 스파게티&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;recipe_ingredients&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;스파게티면&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;돼지고기 다짐육&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;소고기 다짐육&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;양파&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;빵가루&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;우유&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;달걀&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;소금&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;후춧가루&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;올리브오일&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;마늘&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;토마토소스&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;페페론치노&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;모차렐라 치즈&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;recipes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;먼저 미트볼을 만들어보겠습니다. 양파 1/4개는 잘게 다지고, 빵가루 2큰술과 우유 3큰술, 달걀 1/2개, 소금 약간, 후춧가루 약간을 넣어 끈기가 생길 때까지 치대어 주세요. 그리고 4등분하여 둥글납작하게 빚어 줍니다.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;이제 면을 삶아볼까요? 끓는 물에 소금 1큰술을 넣고 스파게티면 200g을 8분간 삶아 건져내 주세요. 삶은 면은 올리브오일을 뿌려 버무려 놓습니다.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;팬에 올리브오일을 두르고 다진 마늘 1큰술을 볶아 향을 내다가 토마토소스 1컵 반(400ml)을 붓고 페페론치노 5개를 손으로 부숴 넣습니다. 끓어오르면 미트볼을 넣어 굴려가며 6분간 끓여 익힙니다.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;삶은 스파게티면을 넣고 버무리듯 볶다가 불을 끄고 모차렐라 치즈 1줌을 올려 뚜껑을 덮어 치즈가 녹을 때까지 둡니다. 파슬리 가루를 솔솔 뿌려 마무리 해주세요.&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>내용을 보면 알 수 있듯 제법 괜찮은 내용을 전달하고 있는 것을 확인할 수 있습니다.<br><code>LLM</code> 모델을 서비스 호출할 수 있도록 <code>호출 URL</code>을 만들어 개발자에게 전달하였습니다.</p><h2 id="💺-인프라-구축" tabindex="-1"><a class="header-anchor" href="#💺-인프라-구축"><span>💺 인프라 구축</span></a></h2><p>인프라는 비용적인 부담이 있기에 자체적으로 보유 중인 크레딧이 존재하여<br><code>네이버 클라우드</code>를 이용하였고 <code>객체인식</code>은 <code>Docker</code>로 배포하였습니다.</p><p>실질적으로 <code>객체인식</code>을 위해 올라간 이미지는 <code>Serving</code> 관련 이미지입니다.<br> 이를 기반으로 서비스의 구성도를 작성할 경우 아래와 같은 형식으로 동작합니다.</p><figure><img src="`+p+'" alt="" width="90%" height="90%" tabindex="0" loading="lazy"><figcaption>네이버 클라우드 기준 동작 구성도</figcaption></figure><h2 id="😁-서비스-이미지" tabindex="-1"><a class="header-anchor" href="#😁-서비스-이미지"><span>😁 서비스 이미지</span></a></h2><h3 id="🤩-로그인-및-회원가입" tabindex="-1"><a class="header-anchor" href="#🤩-로그인-및-회원가입"><span>🤩 로그인 및 회원가입</span></a></h3><figure><img src="'+k+'" alt="" width="20%" height="20%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="🕵️-메인-페이지-및-마이페이지" tabindex="-1"><a class="header-anchor" href="#🕵️-메인-페이지-및-마이페이지"><span>🕵️ 메인 페이지 및 마이페이지</span></a></h3>',83),Y=s("figure",null,[s("p",null,[s("img",{src:r,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:d,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),Q=s("h3",{id:"🧙-식자재-등록-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🧙-식자재-등록-페이지"},[s("span",null,"🧙 식자재 등록 페이지")])],-1),ss=s("figure",null,[s("p",null,[s("img",{src:o,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:g,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),is=s("h3",{id:"🎇-식자재-목록과-상세-확인-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🎇-식자재-목록과-상세-확인-페이지"},[s("span",null,"🎇 식자재 목록과 상세 확인 페이지")])],-1),as=s("figure",null,[s("p",null,[s("img",{src:c,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:A,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),ns=s("h3",{id:"🧑‍🚀-등록된-레시피-확인-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🧑‍🚀-등록된-레시피-확인-페이지"},[s("span",null,"🧑‍🚀 등록된 레시피 확인 페이지")])],-1),es=s("figure",null,[s("p",null,[s("img",{src:B,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:y,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),ls=s("h3",{id:"🍳-레시피-조리-확인-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🍳-레시피-조리-확인-페이지"},[s("span",null,"🍳 레시피 조리 확인 페이지")])],-1),ts=s("figure",null,[s("p",null,[s("img",{src:u,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:m,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:F,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:v,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),hs=s("h3",{id:"🍔-레시피-등록-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🍔-레시피-등록-페이지"},[s("span",null,"🍔 레시피 등록 페이지")])],-1),ps=s("figure",null,[s("p",null,[s("img",{src:b,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:C,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:f,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:D,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),ks=s("h3",{id:"✨-인공지능-레시피-추천-페이지",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#✨-인공지능-레시피-추천-페이지"},[s("span",null,"✨ 인공지능 레시피 추천 페이지")])],-1),rs=s("figure",null,[s("p",null,[s("img",{src:_,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}}),s("img",{src:q,alt:"",width:"20%",height:"20%",loading:"lazy","photo-swipe":"",style:{cursor:"zoom-in"}})])],-1),ds=i('<h2 id="📚-서비스-코드" tabindex="-1"><a class="header-anchor" href="#📚-서비스-코드"><span>📚 서비스 코드</span></a></h2><p>서비스 코드는 전체는 아니지만 일부 내용에 대해 <code>GitHub</code>에 게시해둔 상태입니다.<br><a href="https://github.com/HaeZuo/NewMit" target="_blank" rel="noopener noreferrer">HaeZuo / NewMit</a> 저장소를 참고하시면 내용 확인이 가능하니 참고 부탁드립니다.</p><h2 id="😅-아쉬운-점" tabindex="-1"><a class="header-anchor" href="#😅-아쉬운-점"><span>😅 아쉬운 점</span></a></h2><h3 id="😺-객체인식-1" tabindex="-1"><a class="header-anchor" href="#😺-객체인식-1"><span>😺 객체인식</span></a></h3><p>모델 학습 과정에서 모델의 더 다양한<code>파라미터</code>를 조정해보지 못한 것이 아쉽습니다.</p><p><code>교차검증</code>과 같은 방법을 통해 <code>학습</code>, <code>검증</code>, <code>테스트</code> 데이터를 나누지 못하여 성능 비교가 어려웠던 점,<br> 학습 지표를 잘 활용하여 <code>Epoch</code> 별 학습률을 비교한 뒤 적정 학습률을 찾았으면 좋았을 걸 싶습니다.</p><p>다음에 진행할 땐 이러한 개념을 잘 활용하여 학습률 비교 지표 등을 만들어보는게 목표입니다.</p><h3 id="✍️-llm-2" tabindex="-1"><a class="header-anchor" href="#✍️-llm-2"><span>✍️ LLM</span></a></h3><p><code>LLM</code>을 커스텀하여 이용한 것이 아닌 <code>System Prompt</code>만 이용하여 진행하게 됐습니다.<br> 이에 따라 최신성도 떨어질 수 있기에 다음엔 <code>RAG</code> 등을 이용하는 것도 좋다고 생각합니다.</p><p>또한 현재는 <code>HyperClova X</code>와 같은 상용 모델을 사용하였지만 추후에는 모델을 바꾼다면,<br> 자체 <code>LLM</code>을 만들 수 있도록 <code>Meta LLaMa 3.1</code>과 같은 오픈소스를 사용할까 고민 중입니다.</p><h3 id="💺-인프라-구축-1" tabindex="-1"><a class="header-anchor" href="#💺-인프라-구축-1"><span>💺 인프라 구축</span></a></h3><p>물론 실제 업무가 <code>클라우드</code> 서비스 관련 업무이기 때문에 실제로는 다양한 상품을 다루고 있지만,<br> 비용적인 여건이 부족하기에 이번 프로젝트에선 제공되고 있는 다양한 상품을 사용하지 못했습니다.</p><p>추후에는 더 다양한 상품을 통해 간단한 서비스를 구축해보는 것도 하나의 경험일 것이라 생각됩니다.</p><h2 id="😏-향후-계획" tabindex="-1"><a class="header-anchor" href="#😏-향후-계획"><span>😏 향후 계획</span></a></h2><p><code>LLM</code>을 이용한 레시피 추천 기능은 아쉽게도 실제 조리했던 내용에 대한 사진이 없습니다.<br><code>Stable Diffusion</code>과 같은 <code>이미지 생성형 모델</code>을 이용하여 사진을 생성할까 싶습니다.</p><p>이외 아쉽던 사항을 보완하고 더욱 편하게 개편하여 추후에 관련 개발 시 활용할 계획이 있습니다.</p><hr><p>이번 프로젝트를 통해 더 인공지능에 대한 지식이 늘어난 것 같기도 하고,<br> 4학년 2학기 <code>딥러닝</code> 수업을 통해 기본적인 구조와 이해도 진행 중입니다.</p><p>이제 졸업을 앞두고 있는데 대학원을 가려고 준비도 하고자 합니다.<br> 이번 한해도 참 고민이 많고 여러가지로 생각이 많아지네요.</p><p>정말 긴 포스팅 끝까지 읽어주셔서 감사드립니다. 😎</p>',20),os=[x,E,P,j,z,N,S,L,T,M,U,I,O,R,H,V,X,J,Z,G,K,W,$,Y,Q,ss,is,as,ns,es,ls,ts,hs,ps,ks,rs,ds];function gs(cs,As){return e(),n("div",null,os)}const us=a(w,[["render",gs],["__file","Newmit-retrospect.html.vue"]]),ms=JSON.parse('{"path":"/posts/Personal/Project/Newmit-retrospect.html","title":"[Project] \\"식자재 관리의 새로운 방법을 만나다, 뉴밋\\" 프로젝트 회고","lang":"ko-KR","frontmatter":{"title":"[Project] \\"식자재 관리의 새로운 방법을 만나다, 뉴밋\\" 프로젝트 회고","categories":["Project"],"tags":["Project","프로젝트","인공지능","AI","식자재 관리","뉴밋","객체인식","Object Detection","SSD MobileNet V2","LLM","대규모 언어 모델","HyperClova X","TensorFlow","Java","Python","SpringBoot","대학"],"date":"2024-11-01T00:00:00.000Z","editLink":false,"lastUpdated":true,"description":"정보 📢 현재 포스팅은 2024년 1학기에 진행한 팀 프로젝트에 대한 회고입니다. 프로젝트의 전체 기한과 제가 수행한 인프라, 인공지능 파트를 소개합니다. 🎨 프로젝트 개요 보관 폐기, 먹지않은 음식물이 전체 버려지는 식자재 중 13%를 차지할 정도로 높은 비율을 차지하고 있고 식자재 관리에 어려움을 겪는 사용자...","head":[["meta",{"property":"og:url","content":"https://blog.false.kr/posts/Personal/Project/Newmit-retrospect.html"}],["meta",{"property":"og:site_name","content":"찬스의 개발 블로그 : Chance Devlog"}],["meta",{"property":"og:title","content":"[Project] \\"식자재 관리의 새로운 방법을 만나다, 뉴밋\\" 프로젝트 회고"}],["meta",{"property":"og:description","content":"정보 📢 현재 포스팅은 2024년 1학기에 진행한 팀 프로젝트에 대한 회고입니다. 프로젝트의 전체 기한과 제가 수행한 인프라, 인공지능 파트를 소개합니다. 🎨 프로젝트 개요 보관 폐기, 먹지않은 음식물이 전체 버려지는 식자재 중 13%를 차지할 정도로 높은 비율을 차지하고 있고 식자재 관리에 어려움을 겪는 사용자..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/badge/figma-F24E1E?style=for-the-badge&logo=figma&logoColor=white"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-11-09T00:15:01.000Z"}],["meta",{"property":"article:author","content":"Chance"}],["meta",{"property":"article:tag","content":"Project"}],["meta",{"property":"article:tag","content":"프로젝트"}],["meta",{"property":"article:tag","content":"인공지능"}],["meta",{"property":"article:tag","content":"AI"}],["meta",{"property":"article:tag","content":"식자재 관리"}],["meta",{"property":"article:tag","content":"뉴밋"}],["meta",{"property":"article:tag","content":"객체인식"}],["meta",{"property":"article:tag","content":"Object Detection"}],["meta",{"property":"article:tag","content":"SSD MobileNet V2"}],["meta",{"property":"article:tag","content":"LLM"}],["meta",{"property":"article:tag","content":"대규모 언어 모델"}],["meta",{"property":"article:tag","content":"HyperClova X"}],["meta",{"property":"article:tag","content":"TensorFlow"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:tag","content":"대학"}],["meta",{"property":"article:published_time","content":"2024-11-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-09T00:15:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[Project] \\\\\\"식자재 관리의 새로운 방법을 만나다, 뉴밋\\\\\\" 프로젝트 회고\\",\\"image\\":[\\"https://img.shields.io/badge/figma-F24E1E?style=for-the-badge&logo=figma&logoColor=white\\",\\"https://img.shields.io/badge/photoshop-31A8FF?style=for-the-badge&logo=adobephotoshop&logoColor=white\\",\\"https://img.shields.io/badge/illustrator-FF9A00?style=for-the-badge&logo=adobeillustrator&logoColor=white\\",\\"https://img.shields.io/badge/html5-E34F26?style=for-the-badge&logo=html5&logoColor=white\\",\\"https://img.shields.io/badge/css3-1572B6?style=for-the-badge&logo=css3&logoColor=white\\",\\"https://img.shields.io/badge/sass-CC6699?style=for-the-badge&logo=sass&logoColor=white\\",\\"https://img.shields.io/badge/javascript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=white\\",\\"https://img.shields.io/badge/jquery-0769AD?style=for-the-badge&logo=jquery&logoColor=white\\",\\"https://img.shields.io/badge/bootstrap-7952B3?style=for-the-badge&logo=bootstrap&logoColor=white\\",\\"https://img.shields.io/badge/materialdesign-757575?style=for-the-badge&logo=materialdesign&logoColor=white\\",\\"https://img.shields.io/badge/fontawesome-538DD7?style=for-the-badge&logo=fontawesome&logoColor=white\\",\\"https://blog.false.kr/assets/image/Post/Personal/Project/Newmit-retrospect/1.png  =90%x90%\\",\\"https://blog.false.kr/assets/image/Post/Personal/Project/Newmit-retrospect/2.png  =90%x90%\\",\\"https://blog.false.kr/assets/image/Post/Personal/Project/Newmit-retrospect/3.png \\\\\\"테스트 데이터를 통한 확인\\\\\\" =70%x70%\\",\\"https://blog.false.kr/assets/image/Post/Personal/Project/Newmit-retrospect/4.png \\\\\\"네이버 클라우드 기준 동작 구성도\\\\\\" =90%x90%\\",\\"https://blog.false.kr/assets/image/Post/Personal/Project/Newmit-retrospect/5.png  =20%x20%\\"],\\"datePublished\\":\\"2024-11-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-09T00:15:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chance\\",\\"url\\":\\"https://blog.false.kr\\",\\"email\\":\\"chance0432@naver.com\\"}]}"]]},"headers":[{"level":2,"title":"🎨 프로젝트 개요","slug":"🎨-프로젝트-개요","link":"#🎨-프로젝트-개요","children":[{"level":3,"title":"🧑‍💻 프로젝트 참여자","slug":"🧑‍💻-프로젝트-참여자","link":"#🧑‍💻-프로젝트-참여자","children":[]}]},{"level":2,"title":"🖼️ 아이디어 스케치","slug":"🖼️-아이디어-스케치","link":"#🖼️-아이디어-스케치","children":[{"level":3,"title":"🥘 식자재 관리 플랫폼","slug":"🥘-식자재-관리-플랫폼","link":"#🥘-식자재-관리-플랫폼","children":[]},{"level":3,"title":"📜 뉴스 키워드 분석을 통한 실시간 순위","slug":"📜-뉴스-키워드-분석을-통한-실시간-순위","link":"#📜-뉴스-키워드-분석을-통한-실시간-순위","children":[]}]},{"level":2,"title":"⌛ 개발 기간","slug":"⌛-개발-기간","link":"#⌛-개발-기간","children":[]},{"level":2,"title":"💻 개발 스택","slug":"💻-개발-스택","link":"#💻-개발-스택","children":[{"level":3,"title":"👔 UI/UX","slug":"👔-ui-ux","link":"#👔-ui-ux","children":[]},{"level":3,"title":"🔬 백엔드","slug":"🔬-백엔드","link":"#🔬-백엔드","children":[]},{"level":3,"title":"💺 인프라","slug":"💺-인프라","link":"#💺-인프라","children":[]},{"level":3,"title":"🤖 인공지능","slug":"🤖-인공지능","link":"#🤖-인공지능","children":[]}]},{"level":2,"title":"🤔 구분 별 회고","slug":"🤔-구분-별-회고","link":"#🤔-구분-별-회고","children":[{"level":3,"title":"😺 객체인식","slug":"😺-객체인식","link":"#😺-객체인식","children":[]},{"level":3,"title":"✍️ LLM","slug":"✍️-llm-1","link":"#✍️-llm-1","children":[]}]},{"level":2,"title":"💺 인프라 구축","slug":"💺-인프라-구축","link":"#💺-인프라-구축","children":[]},{"level":2,"title":"😁 서비스 이미지","slug":"😁-서비스-이미지","link":"#😁-서비스-이미지","children":[{"level":3,"title":"🤩 로그인 및 회원가입","slug":"🤩-로그인-및-회원가입","link":"#🤩-로그인-및-회원가입","children":[]},{"level":3,"title":"🕵️ 메인 페이지 및 마이페이지","slug":"🕵️-메인-페이지-및-마이페이지","link":"#🕵️-메인-페이지-및-마이페이지","children":[]},{"level":3,"title":"🧙 식자재 등록 페이지","slug":"🧙-식자재-등록-페이지","link":"#🧙-식자재-등록-페이지","children":[]},{"level":3,"title":"🎇 식자재 목록과 상세 확인 페이지","slug":"🎇-식자재-목록과-상세-확인-페이지","link":"#🎇-식자재-목록과-상세-확인-페이지","children":[]},{"level":3,"title":"🧑‍🚀 등록된 레시피 확인 페이지","slug":"🧑‍🚀-등록된-레시피-확인-페이지","link":"#🧑‍🚀-등록된-레시피-확인-페이지","children":[]},{"level":3,"title":"🍳 레시피 조리 확인 페이지","slug":"🍳-레시피-조리-확인-페이지","link":"#🍳-레시피-조리-확인-페이지","children":[]},{"level":3,"title":"🍔 레시피 등록 페이지","slug":"🍔-레시피-등록-페이지","link":"#🍔-레시피-등록-페이지","children":[]},{"level":3,"title":"✨ 인공지능 레시피 추천 페이지","slug":"✨-인공지능-레시피-추천-페이지","link":"#✨-인공지능-레시피-추천-페이지","children":[]}]},{"level":2,"title":"📚 서비스 코드","slug":"📚-서비스-코드","link":"#📚-서비스-코드","children":[]},{"level":2,"title":"😅 아쉬운 점","slug":"😅-아쉬운-점","link":"#😅-아쉬운-점","children":[{"level":3,"title":"😺 객체인식","slug":"😺-객체인식-1","link":"#😺-객체인식-1","children":[]},{"level":3,"title":"✍️ LLM","slug":"✍️-llm-2","link":"#✍️-llm-2","children":[]},{"level":3,"title":"💺 인프라 구축","slug":"💺-인프라-구축-1","link":"#💺-인프라-구축-1","children":[]}]},{"level":2,"title":"😏 향후 계획","slug":"😏-향후-계획","link":"#😏-향후-계획","children":[]}],"git":{"createdTime":1730465609000,"updatedTime":1731111301000,"contributors":[{"name":"Chance","email":"ahs0432@naver.com","commits":9},{"name":"ahs0432","email":"ahs0432@naver.com","commits":2}]},"readingTime":{"minutes":5.54,"words":1661},"filePathRelative":"posts/Personal/Project/Newmit-retrospect.md","localizedDate":"2024년 11월 1일","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">정보</p>\\n<p>📢 현재 포스팅은 2024년 1학기에 진행한 <code>팀 프로젝트</code>에 대한 회고입니다.<br>\\n프로젝트의 전체 기한과 제가 수행한 인프라, 인공지능 파트를 소개합니다.</p>\\n</div>\\n<h2>🎨 프로젝트 개요</h2>\\n<p>보관 폐기, 먹지않은 음식물이 전체 버려지는 식자재 중 13%를 차지할 정도로<br>\\n높은 비율을 차지하고 있고 식자재 관리에 어려움을 겪는 사용자가 굉장히 많습니다.</p>","autoDesc":true}');export{us as comp,ms as data};
