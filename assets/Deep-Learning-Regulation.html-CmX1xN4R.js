import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,a}from"./app-DyM4jzy7.js";const t="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/1.png",n="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/2.png",l="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/3.png",h="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/4.png",p="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/5.png",d="/assets/image/Post/Computing/AI/Deep-Learning-Regulation/6.png",k={},o=a(`<h2 id="📲-규제-기법" tabindex="-1"><a class="header-anchor" href="#📲-규제-기법"><span>📲 규제 기법</span></a></h2><p><code>딥러닝</code>의 경우 <code>층</code>이 깊지 않더라도 최적화가 필요한 <code>파라미터</code>가 굉장히 많습니다.</p><p>이 경우 비교적 깊지 않더라도 <code>과대적합</code>에 빠질 수 있다는 문제가 존재하고 있지만,<br><code>딥러닝</code>에선 보통 깊이를 줄이지 않고 <code>과대적합</code>을 방지하는 <code>규제</code>를 사용합니다.</p><p>대표적으로 <code>데이터 증대</code>, <code>드롭아웃</code>, <code>가중치 감쇠</code>가 있고 이에 대해 알아봅니다.</p><h3 id="🪣-데이터-증대" tabindex="-1"><a class="header-anchor" href="#🪣-데이터-증대"><span>🪣 데이터 증대</span></a></h3><p>일반적으로 <code>데이터</code>가 많아지게 되면 <code>과대적합</code> 문제의 경우 해소되는 경우가 많습니다.<br> 하지만 새로운 <code>데이터</code>를 늘리는 데에는 많은 시간과 비용이 발생되는 문제점이 있습니다.</p><p>이때 인위적으로 <code>데이터</code>를 늘리는 <code>규제</code> 기법을 사용하는데 이를 <code>데이터 증대</code>라 합니다.<br> 일반적으로 이미지, 영상 <code>데이터</code>에서 이뤄지며 방법은 아래와 같은 방법들이 존재합니다.</p><ul><li>상하좌우로 이동</li><li>상하좌우로 회전</li><li>상하좌우로 반전</li><li>명암 조절</li><li>블러 조절</li><li>채도 조절</li></ul><p>위 방법들을 수동으로 수행하기에는 아무래도 굉장히 많은 시간이 소요될 수 있습니다.<br><code>TensorFlow</code>에서는 간단하게 증대하도록 <code>ImageDataGenrator</code> 함수를 제공합니다.</p><p>함수는 아래와 같이 선언하여 간단하게 <code>데이터 증대</code>기를 생성하여 이용할 수 있습니다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tensorflow.keras.preprocessing.image </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ImageDataGenerator</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # 한 번에 생성하는 이미지 개수</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">generator </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ImageDataGenerator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">rotation_range</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">width_shift_range</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">height_shift_range</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">horizontal_flip</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gen </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> generator.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">flow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">이미지 데이터</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">이미지 라벨</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">batch_size</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bs)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 이미지와 라벨을 규칙에 맞춰 생성</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">img, label </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gen)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위 함수를 이용하여 영상 <code>데이터 셋</code> 중 <code>CIFAR-10</code> 데이터를 이용한 테스트 진행 시<br> 원본 12개의 이미지를 6개씩 2회 <code>증대</code>하였을 때 아래와 같은 결과가 확인됐습니다.</p><figure><img src="`+t+'" alt="" width="80%" height="80%" tabindex="0" loading="lazy"><figcaption>CIFAR-10 이미지 증대 결과</figcaption></figure><p>이러한 <code>데이터 증대</code> 과정에서 많이 사용되는 <code>파라미터</code>에 대해서도 알아보겠습니다.</p><ul><li><code>rescale</code>: 픽셀의 값을 줄이거나 늘립니다. (n/n 형태로 나누기를 위함)</li><li><code>width_shift_range</code>: 1보다 작은 값일 경우 비율을 통해 이미지를 좌우로 이동합니다.</li><li><code>height_shift_range</code>: 1보다 작은 값일 경우 비율을 통해 이미지를 상하로 이동합니다.</li><li><code>rotation_range</code>: 파라미터의 각도만큼 이미지를 회전시킨 이미지를 제공합니다.</li><li><code>zoom_range</code>: 파라미터의 수만큼 배율을 적용한 이미지를 제공합니다.</li><li><code>validation_split</code>: 파라미터의 비율만큼 검증 데이터로 분리합니다.</li><li><code>horizontal_flip</code>: 좌우 뒤집기 여부를 결정합니다.</li><li><code>vertical_flip</code>: 상하 뒤집기 여부를 결정합니다.</li><li><code>fill_mode</code>: 비어있는 픽셀이 있는 경우 채우는 방법을 결정합니다. <ul><li><code>neareast</code>, <code>constant</code>, <code>reflect</code>, <code>wrap</code> 등</li></ul></li></ul><h3 id="🌠-드롭아웃" tabindex="-1"><a class="header-anchor" href="#🌠-드롭아웃"><span>🌠 드롭아웃</span></a></h3><p>너무 많은 <code>노드</code>를 가진 경우 <code>드롭아웃</code>을 통해 <code>노드</code>의 연결을 느슨하게 만들게 됐을 때,<br> 성능의 큰 문제가 없거나 오히려 성능이 좋아지는 경우가 있다라는 개념에서 시작됐습니다.</p><p><code>드롭아웃</code>은 일정 비율의 <code>노드</code>를 임의 지정하여 사용이 불능하도록 만드는 아이디어입니다.<br><code>드롭아웃</code>은 25%, 50% 등의 비율을 사용하고 일반적으로 50% 이상은 설정하지 않습니다.</p><p>이러한 개념을 그림으로 표현하면 <code>완전연결층</code>이 <code>드롭아웃</code>되면서 <code>노드</code>가 <code>불능</code>되면서<br> 그와 연결됐던 <code>에지</code>가 모두 끊어져 <code>신경망</code>이 성글해진 것을 확인하실 수 있습니다.</p><figure><img src="'+n+`" alt="" width="80%" height="80%" tabindex="0" loading="lazy"><figcaption>드롭아웃 시각화</figcaption></figure><p><code>TensorFlow</code>에서 <code>모델</code>을 설계할 때 아래와 같이 추가할 경우 <code>드롭아웃</code>이 구현됩니다.<br> 아래와 같이 생성 시 <code>컨볼루션</code> 2층 수행 및 <code>풀링</code> 수행 후 <code>드롭아웃</code>이 진행됩니다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cnn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Sequential</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cnn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Conv2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;relu&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">input_shape</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cnn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Conv2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;relu&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cnn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">MaxPooling2D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">pool_size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cnn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Dropout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="⬇️-가중치-감쇠" tabindex="-1"><a class="header-anchor" href="#⬇️-가중치-감쇠"><span>⬇️ 가중치 감쇠</span></a></h3><p>다항식 모델은 <code>가중치</code> 값이 수천~수만을 넘고 이는 <code>과대적합</code>의 원인이 되기도 합니다.<br><code>가중치 감쇠</code>는 <code>모델</code>의 오류 최소화와 동시에 <code>가중치</code> 값을 작게 유지하는 기법입니다.</p><p><code>가중치 감쇠</code>는 두 가지 종류로 나뉘며 <code>L1 규제(Lasso)</code>, <code>L2 규제(Reige)</code>라 합니다.</p><h4 id="😎-l1-규제" tabindex="-1"><a class="header-anchor" href="#😎-l1-규제"><span>😎 L1 규제</span></a></h4><p><code>L1 규제</code>의 경우 원본 값에 <code>가중치</code> 절대 값의 합을 더하는 형태로 구현되는 구조이며,<br> 일부 <code>가중치</code>를 0으로 만듦으로 <code>희소성</code>을 유도하며 중요 특징만을 선택하게 만듭니다.</p><p>이를 수식으로 표현하면 아래처럼 기존의 <code>MSE</code> 함수에 <code>L1 규제</code>를 표현할 수 있습니다.<br> 여기서 <code>λ</code>는 강도를 조절하는 <code>하이퍼 파라미터</code>로 사용되는 요소니 참고하시면 됩니다.</p><figure><img src="`+l+'" alt="" width="70%" height="70%" tabindex="0" loading="lazy"><figcaption>L1 규제 수식</figcaption></figure><p>해당 수식에서 <code>λ|U|</code>를 풀어서 수식에 표현하게 된다면 아래와 같이 표현될 수 있습니다.<br> 여기서 결국 안쪽에 위치하는 내용은 각 <code>에지</code>에 대한 <code>가중치</code>를 의미한다 볼 수 있습니다.</p><figure><img src="'+h+'" alt="" width="70%" height="70%" tabindex="0" loading="lazy"><figcaption>L1 규제 수식 풀이</figcaption></figure><h4 id="🫠-l2-규제" tabindex="-1"><a class="header-anchor" href="#🫠-l2-규제"><span>🫠 L2 규제</span></a></h4><p><code>L2 규제</code>의 경우 원본 값에 <code>가중치</code> 제곱 합을 더하는 형태로 구현되는 구조입니다.<br><code>가중치</code>가 큰 값을 가지지 못하도록 하여 복잡도를 줄이는 효과를 갖게하는 방식입니다.</p><p><code>L1 규제</code>가 희소성을 유도하는 특성이 있다면 여기서는 크기 조정 효과를 갖게 됩니다.<br> 이를 수식으로 표현하게 될 경우 <code>L1 규제</code>에서 2차 Norm으로 변경된 형태로 확인됩니다.</p><figure><img src="'+p+'" alt="" width="70%" height="70%" tabindex="0" loading="lazy"><figcaption>L2 규제 수식 풀이</figcaption></figure><p>해당 수식을 풀어볼 경우 아래와 같이 <code>가중치</code>마다 제곱을 수행하는게 확인 가능합니다.</p><figure><img src="'+d+`" alt="" width="70%" height="70%" tabindex="0" loading="lazy"><figcaption>L2 규제 수식 풀이</figcaption></figure><h4 id="🤔-적용" tabindex="-1"><a class="header-anchor" href="#🤔-적용"><span>🤔 적용</span></a></h4><p>해당 <code>가중치 감쇠</code>는 <code>TensorFlow</code>에서 대상에 따라 <code>매개변수</code>로 적용할 수 있습니다.<br> 적용 가능한 대상은 아래와 같으며, 각각에 어떤 <code>규제</code>를 적용할지 아래처럼 확인됩니다.</p><ul><li><code>kernel_regularizer</code>(<code>가중치</code>)</li><li><code>bias_regularizer</code>(<code>바이어스</code>)</li><li><code>activity_regularizer</code>(<code>활성 함수 결과</code>)</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tensorflow.keras </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> regularizers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">model.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Dense</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">input_dim</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">kernel_regularizer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">regularizer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">l2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">activity_regularizer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">regularizer.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">l1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>끝까지 읽어주셔서 감사드립니다. 😎</p>`,43),r=[o];function c(g,A){return e(),s("div",null,r)}const m=i(k,[["render",c],["__file","Deep-Learning-Regulation.html.vue"]]),u=JSON.parse('{"path":"/posts/Computing/AI/Deep-Learning-Regulation.html","title":"[Artificial Intelligence] 딥러닝에서 사용되는 규제 기법","lang":"ko-KR","frontmatter":{"title":"[Artificial Intelligence] 딥러닝에서 사용되는 규제 기법","categories":["AI"],"tags":["AI","인공지능","데이터 증대","데이터","드롭아웃","가중치 감쇠","L1","L2","라쏘","리지","규제","규제 기법","가중치"],"date":"2024-12-02T00:00:00.000Z","order":401,"editLink":false,"lastUpdated":true,"description":"📲 규제 기법 딥러닝의 경우 층이 깊지 않더라도 최적화가 필요한 파라미터가 굉장히 많습니다. 이 경우 비교적 깊지 않더라도 과대적합에 빠질 수 있다는 문제가 존재하고 있지만, 딥러닝에선 보통 깊이를 줄이지 않고 과대적합을 방지하는 규제를 사용합니다. 대표적으로 데이터 증대, 드롭아웃, 가중치 감쇠가 있고 이에 대해...","head":[["meta",{"property":"og:url","content":"https://blog.false.kr/posts/Computing/AI/Deep-Learning-Regulation.html"}],["meta",{"property":"og:site_name","content":"찬스의 개발 블로그 : Chance Devlog"}],["meta",{"property":"og:title","content":"[Artificial Intelligence] 딥러닝에서 사용되는 규제 기법"}],["meta",{"property":"og:description","content":"📲 규제 기법 딥러닝의 경우 층이 깊지 않더라도 최적화가 필요한 파라미터가 굉장히 많습니다. 이 경우 비교적 깊지 않더라도 과대적합에 빠질 수 있다는 문제가 존재하고 있지만, 딥러닝에선 보통 깊이를 줄이지 않고 과대적합을 방지하는 규제를 사용합니다. 대표적으로 데이터 증대, 드롭아웃, 가중치 감쇠가 있고 이에 대해..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/1.png \\"CIFAR-10 이미지 증대 결과\\" =80%x80%"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-12-01T17:04:21.000Z"}],["meta",{"property":"article:author","content":"Chance"}],["meta",{"property":"article:tag","content":"AI"}],["meta",{"property":"article:tag","content":"인공지능"}],["meta",{"property":"article:tag","content":"데이터 증대"}],["meta",{"property":"article:tag","content":"데이터"}],["meta",{"property":"article:tag","content":"드롭아웃"}],["meta",{"property":"article:tag","content":"가중치 감쇠"}],["meta",{"property":"article:tag","content":"L1"}],["meta",{"property":"article:tag","content":"L2"}],["meta",{"property":"article:tag","content":"라쏘"}],["meta",{"property":"article:tag","content":"리지"}],["meta",{"property":"article:tag","content":"규제"}],["meta",{"property":"article:tag","content":"규제 기법"}],["meta",{"property":"article:tag","content":"가중치"}],["meta",{"property":"article:published_time","content":"2024-12-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-01T17:04:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"[Artificial Intelligence] 딥러닝에서 사용되는 규제 기법\\",\\"image\\":[\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/1.png \\\\\\"CIFAR-10 이미지 증대 결과\\\\\\" =80%x80%\\",\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/2.png \\\\\\"드롭아웃 시각화\\\\\\" =80%x80%\\",\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/3.png \\\\\\"L1 규제 수식\\\\\\" =70%x70%\\",\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/4.png \\\\\\"L1 규제 수식 풀이\\\\\\" =70%x70%\\",\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/5.png \\\\\\"L2 규제 수식 풀이\\\\\\" =70%x70%\\",\\"https://blog.false.kr/assets/image/Post/Computing/AI/Deep-Learning-Regulation/6.png \\\\\\"L2 규제 수식 풀이\\\\\\" =70%x70%\\"],\\"datePublished\\":\\"2024-12-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-01T17:04:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chance\\",\\"url\\":\\"https://blog.false.kr\\",\\"email\\":\\"chance0432@naver.com\\"}]}"]]},"headers":[{"level":2,"title":"📲 규제 기법","slug":"📲-규제-기법","link":"#📲-규제-기법","children":[{"level":3,"title":"🪣 데이터 증대","slug":"🪣-데이터-증대","link":"#🪣-데이터-증대","children":[]},{"level":3,"title":"🌠 드롭아웃","slug":"🌠-드롭아웃","link":"#🌠-드롭아웃","children":[]},{"level":3,"title":"⬇️ 가중치 감쇠","slug":"⬇️-가중치-감쇠","link":"#⬇️-가중치-감쇠","children":[]}]}],"git":{"createdTime":1733072661000,"updatedTime":1733072661000,"contributors":[{"name":"Chance","email":"ahs0432@naver.com","commits":1}]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"posts/Computing/AI/Deep-Learning-Regulation.md","localizedDate":"2024년 12월 2일","excerpt":"<h2>📲 규제 기법</h2>\\n<p><code>딥러닝</code>의 경우 <code>층</code>이 깊지 않더라도 최적화가 필요한 <code>파라미터</code>가 굉장히 많습니다.</p>\\n<p>이 경우 비교적 깊지 않더라도 <code>과대적합</code>에 빠질 수 있다는 문제가 존재하고 있지만,<br>\\n<code>딥러닝</code>에선 보통 깊이를 줄이지 않고 <code>과대적합</code>을 방지하는 <code>규제</code>를 사용합니다.</p>\\n<p>대표적으로 <code>데이터 증대</code>, <code>드롭아웃</code>, <code>가중치 감쇠</code>가 있고 이에 대해 알아봅니다.</p>","autoDesc":true}');export{m as comp,u as data};
